# create final mars dataset: containing accuracy and inverse efficiency measures
mars  <-  mars_total_filter %>%
rename(subID = subject_id) %>%
mutate(acc = num_correct/num_trials,
inv_e = median_rt/acc) %>%
mutate(age_group = case_when(age < 11 ~ "Children",
age > 10.99 & age < 13 ~ "Younger adolescents",
age > 12.99 & age < 16 ~ "Mid adolescents",
age > 15.99 & age < 18 ~ "Older adolescents",
age > 17.99 ~ "Adults"))
mars$age_group <- factor(mars$age_group, levels = c("Children",
"Younger adolescents",
"Mid adolescents",
"Older adolescents",
"Adults"))
# name output folder
output_folder <- "output/mars"
mars_summary <- mars %>%
group_by(age_group) %>%
summarize(mean_acc = mean(acc),
se_acc = se(acc),
med_rt = median(rt),
se_rt = se(rt),
mean_inv_e = mean(inv_e),
se_inv_e = se(inv_e),
mean_num_trials = mean(num_trials),
se_num_trials = se(num_trials))
mars_summary
#save stats
write_delim(mars_summary, path = glue("{output_folder}/summary_stats_age_groups.txt"), delim = "\t")
summary_stats
mars_summary <- mars %>%
group_by(age_group) %>%
summarize(mean_acc = mean(acc),
se_acc = se(acc),
med_rt = median(rt),
se_rt = se(rt),
med_rt_correct = median(rt[correct == 1]),
se_rt_correct = se(rt[correct == 1])
mean_inv_e = mean(inv_e),
se_inv_e = se(inv_e),
mean_num_trials = mean(num_trials),
se_num_trials = se(num_trials))
mars_summary <- mars %>%
group_by(age_group) %>%
summarize(mean_acc = mean(acc),
se_acc = se(acc),
med_rt = median(rt),
se_rt = se(rt),
med_rt_correct = median(rt[correct == 1]),
se_rt_correct = se(rt[correct == 1]),
mean_inv_e = mean(inv_e),
se_inv_e = se(inv_e),
mean_num_trials = mean(num_trials),
se_num_trials = se(num_trials))
#save stats
write_delim(mars_summary, path = glue("{output_folder}/summary_stats_age_groups.txt"), delim = "\t")
# get summary statistics for subjects
mars_subs <- mars %>%
group_by(subID, age_group, age, sex) %>%
summarize(acc = mean(acc),
med_rt = mean(median_rt),
med_rt_correct = median(rt[correct == 1]),
se_rt = se(rt),
fast_rt = mean(fast_rts),
browser_interactions = mean(browser_interactions),
inv_e = mean(inv_e),
num_trials = mean(num_trials),
WASI_rawVerbal = mean(WASI_rawVerbal),
WASI_raw_MR = mean(WASI_raw_MR),
WASI_Verbal_T = mean(WASI_Verbal_T),
WASI_MR_T = mean(WASI_MR_T),
WASI_IQ = mean(WASI_IQ))
mars_subs
#save stats
write_delim(mars_subs, path = glue("{output_folder}/summary_stats_subs.txt"), delim = "\t")
# get summary statistics for each age group
mars_group_summary <- mars_subs %>%
group_by(age_group) %>%
summarise(across(
.cols = is.numeric,
.fns = list(mean = mean, median = median, sd = sd), na.rm = TRUE,
.names = "{col}_{fn}"
))
write_delim(mars_group_summary, path = glue("{output_folder}/summary_stats_grand_means.txt"), delim = "\t")
mars_group_summary
mars_subs
mars$age_z <- scale_this(mars$age)
mars$age_z_sq <- (mars$age)^2
# Test for quadratic effect of age on accuracy
acc.age.model.1 <- mixed(correct ~ age_z + (1|subID) + (1|item), data = mars,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)), family ='binomial',
return = "merMod")
acc.age.model.2 <- mixed(correct ~ age_z + age_z_sq + (1|subID) + (1|item), data = mars,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)), family ='binomial',
return = "merMod")
anova(acc.age.model.1, acc.age.model.2)
# effect of age on accuracy
acc.age.model <- mixed(correct ~ age_z + (1|subID) + (1|item), data = mars,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)), family ='binomial',
method = "LRT") # LRT = likelihood ratio test
acc.age.model
# manually save model outputs
tab_model(acc.age.model, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("Accuracy by Age"),
pred.labels = c("Intercept",
"Age"),
file = glue("{output_folder}/acc.age.model.html"))
# plot
mars_subs %<>%
filter(!is.na(age_group))
mars_subs
# plot
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
# accuracy age groups violin plot
acc_plot <- ggplot(data=mars_subs, aes(x=age_group, y=acc, fill = age_group)) +
geom_violin(trim = T) +
geom_jitter(size = .5, alpha = .3, position=position_jitter(0.1, 0.1)) +
stat_summary(fun.data=data_summary) +
scale_fill_manual(values = c("#7f4e5e", "#fd958a", "#96bc2e", "#20ccd2", "#d59dff")) +
ylab("Accuracy (%)") +
xlab("Age group") +
scale_y_continuous(labels=function(x)x*100)+
coord_cartesian(ylim = c(0, 1)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
acc_plot
#save plot
ggsave(glue("{output_folder}/acc_violin_plot.png"), plot = last_plot(), height = 5, width = 7, unit = "in", dpi = 300)
# accuracy continuous age plot
acc_continuous_age_plot <- ggplot(mars_subs, aes(x = age, y = acc)) +
geom_point() +
stat_smooth(aes(y = acc), method = "lm", formula = y ~ poly(x, 1), color = "black") + # change regression line to quadratic --> poly(x, 2)
ylab("Accuracy (%)") +
xlab("Age")  +
scale_y_continuous(labels=function(x)x*100)+
coord_cartesian(ylim = c(0, 1)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
acc_continuous_age_plot
#save plot
ggsave(glue("{output_folder}/acc_continuous_age_plot.png"), plot = last_plot(), height = 3, width = 4, unit = "in", dpi = 300)
####################################
#### Accuracy by Dimensionality ####
#####################################
#z-score dimensionality
mars$dim_z <- scale_this(mars$dimensionality_score)
# effect of dimensionality on accuracy - sig effect
acc.dim.model <- mixed(correct ~ dim_z + (1|subID), data = mars,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)), family ='binomial',
method = "LRT")
acc.dim.model
# manually save model outputs
tab_model(acc.dim.model, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("Accuracy by Dimensionality"),
pred.labels = c("Intercept",
"Dimensionality Score (z)"),
file = glue("{output_folder}/acc.dim.model.html"))
# accuracy age groups violin plot
mars_dim <- mars %>%
group_by(dimensionality_score) %>%
summarize(mean_acc = mean(acc),
se_acc = se(acc))
mars_dim
# accuracy continuous age plot
acc_continuous_dim_plot <- ggplot(mars_dim, aes(x = dimensionality_score, y = mean_acc)) +
geom_point() +
stat_smooth(aes(y = mean_acc), method = "lm", formula = y ~ poly(x, 3), color = "black") + # change regression line to quadratic --> poly(x, 2)
ylab("Accuracy (%)") +
xlab("Dimensionality Score")  +
scale_y_continuous(labels=function(x)x*100)+
coord_cartesian(xlim = c(1, 8)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
acc_continuous_dim_plot
# accuracy continuous age plot
acc_continuous_dim_plot <- ggplot(mars_dim, aes(x = dimensionality_score, y = mean_acc)) +
geom_point() +
stat_smooth(aes(y = mean_acc), method = "lm", formula = y ~ x, color = "black") + # change regression line to quadratic --> poly(x, 2)
ylab("Accuracy (%)") +
xlab("Dimensionality Score")  +
scale_y_continuous(labels=function(x)x*100)+
coord_cartesian(xlim = c(1, 8)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
acc_continuous_dim_plot
#save plot
ggsave(glue("{output_folder}/acc_continuous_dim_plot.png"), plot = last_plot(), height = 3, width = 4, unit = "in", dpi = 300)
# effect of dimensionality and age on accuracy - no sig interaction effect
acc.age.dim.model <- mixed(correct ~ age_z*dim_z + (1+dimensionality_score|subID), data = mars,
control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)), family ='binomial',
method = "LRT")
acc.age.dim.model
mars_correct_rts <- mars %>%
filter(correct == 1)
mars_correct_rts$log_rt <- log(mars_correct_rts$rt)
mars_correct_rts$age_z <- scale_this(mars_correct_rts$age)
mars_correct_rts$age_z_sq <- (mars_correct_rts$age)^2
#test for quadratic effect of age
log.correct.rt.age.model.1 <- mixed(log_rt ~ age_z + (1|subID), data = mars_correct_rts,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)),
return = "merMod")
log.correct.rt.age.model.2 <- mixed(log_rt ~ age_z + age_z_sq + (1|subID), data = mars_correct_rts,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)),
return = "merMod")
anova(log.correct.rt.age.model.1, log.correct.rt.age.model.2) #not significant
#run model
log.correct.rt.age.model <- mixed(log_rt ~ age_z + (1|subID), data = mars_correct_rts,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)),
method = "S")
log.correct.rt.age.model
tab_model(log.correct.rt.age.model,
show.stat = T,
show.se = T,
string.ci = "CI (95%)",
string.est = "Estimate",
string.stat = "t value",
string.se = "SE",
dv.labels = c("Log(RTs) by Age"),
pred.labels = c("Intercept",
"Age"),
file = glue("{output_folder}/log.correct.rt.age.model.html"))
# rt continuous age plot
rt_continuous_age_plot <- ggplot(mars_subs, aes(x = age, y = med_rt)) +
geom_point() +
stat_smooth(aes(y = med_rt), method = "lm", formula = y ~ poly(x, 1), color = "black") +
ylab("Median Response Time (ms)") +
xlab("Age")  +
#coord_cartesian(ylim = c(0, 1)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
rt_continuous_age_plot
#save plot
ggsave(glue("{output_folder}/rt_correct_continuous_age_plot.png"), plot = last_plot(), height = 3, width = 4, unit = "in", dpi = 300)
###############################
#### RTs by Dimensionality ####
###############################
#scale dimensionality score
mars_correct_rts$dim_z <- scale_this(mars_correct_rts$dimensionality_score)
# effect of dimensionality on correct reaction times
rt.dim.model <- mixed(log_rt ~ dim_z + (1|subID), data = mars_correct_rts,
control = lmerControl(optimizer = "bobyqa", optCtrl = list(maxfun=100000)),
method = "S")
rt.dim.model
# manually save model outputs
tab_model(rt.dim.model,
show.stat = T,
show.se = T,
string.ci = "CI (95%)",
string.est = "Estimate",
string.stat = "t value",
string.se = "SE",
dv.labels = c("RTs by Dimensionality"),
pred.labels = c("Intercept",
"Dimensionality Score"),
file = glue("{output_folder}/rt.dim.model.html"))
# manually save model outputs
tab_model(rt.dim.model,
show.stat = T,
show.se = T,
string.ci = "CI (95%)",
string.est = "Estimate",
string.stat = "t value",
string.se = "SE",
dv.labels = c("RTs by Dimensionality"),
pred.labels = c("Intercept",
"Dimensionality Score (z)"),
file = glue("{output_folder}/rt.dim.model.html"))
mars_subs
#scale age
mars_subs$age_z <- scale_this(mars_subd$age)
#scale age
mars_subs$age_z <- scale_this(mars_subs$age)
mars_subs$age_z_sq <- (mars_subs$age_z)^2
#test for quadratic effects of age
items.age.model.1 <- lm(num_trials ~ age_z, data = mars_subs)
items.age.model.2 <- lm(num_trials ~ age_z + age_z_sq, data = mars_subs)
anova(items.age.model.1, items.age.model.2) #not significant
items.age.model <- lm(num_trials ~ age_z, data = mars_subs)
summary(items.age.model)
# manually save model outputs
tab_model(no.I.age.model, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("Number of Items Completed by Age"),
pred.labels = c("Intercept",
"Age"),
file = glue("{output_folder}/no.I.age.model.html"))
# manually save model outputs
tab_model(items.age.model, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("Number of Items Completed by Age"),
pred.labels = c("Intercept",
"Age"),
file = glue("{output_folder}/no.I.age.model.html"))
# no. items completed age groups violin plot
items_plot <- ggplot(data=mars_subs, aes(x=age_group, y=num_trials, fill = age_group)) +
geom_violin(trim = T) +
geom_jitter(size = .5, alpha = .3, position=position_jitter(0.1, 0.1)) +
stat_summary(fun.data=data_summary) +
scale_fill_manual(values = c("#7f4e5e", "#fd958a", "#96bc2e", "#20ccd2", "#d59dff")) +
ylab("No. of Items Completed") +
xlab("Age group") +
ylim(c(0, 85))+
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
items_plot
#save plot
ggsave(glue("{output_folder}/items_plot.png"), plot = last_plot(), height = 5, width = 7, unit = "in", dpi = 300)
# no. items completed continuous age plot
items_continuous_age_plot <- ggplot(mars_subs, aes(x = age, y = num_trials)) +
geom_point() +
stat_smooth(aes(y = num_trials), method = "lm", formula = y ~ x, color = "black") +
ylab("No. of Items Completed") +
xlab("Age")  +
#coord_cartesian(ylim = c(0, 1)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
items_continuous_age_plot
ggsave(glue("{output_folder}/items_continuous_plot.png"), plot = last_plot(), height = 3, width = 4, unit = "in", dpi = 300)
####################################
##### Inverse Efficiency by Age ####
#####################################
# inverse efficiency = median RTs/accuracy
# check for linear, quadratic or cubic age effects on inverse efficiency
in.e.model.1 <- lm(inv_e ~ age_z, data = mars_subs)
in.e.model.2 <- lm(inv_e ~ age_z + age_z_sq, data = mars_subs)
anova(in.e.model.1, in.e.model.2) #not significant
# effect of age on inverse efficiency - not sig
inv.e.age.model <- lm(inv_e ~ age_z, data = mars_subs)
summary(inv.e.age.model)
# manually save model outputs
tab_model(inv.e.age.model, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("Inverse Efficiency by Age"),
pred.labels = c("Intercept",
"Age"),
file = glue("{output_folder}/inv.e.age.model.html"))
# inverse efficiency age groups violin plot
in.e_plot <- ggplot(data=mars_subs, aes(x=age_group, y= inv_e, fill = age_group)) +
geom_violin(trim = T) +
geom_jitter(size = .5, alpha = .3, position=position_jitter(0.1, 0.1)) +
stat_summary(fun.data=data_summary) +
scale_fill_manual(values = c("#7f4e5e", "#fd958a", "#96bc2e", "#20ccd2", "#d59dff")) +
ylab("Inverse Efficiency") +
xlab("Age group") +
#ylim(c(0, 30000))+
coord_cartesian(ylim = c(0, 30000)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
in.e_plot
#save plot
ggsave(glue("{output_folder}/in.e_plot.png"), plot = last_plot(), height = 5, width = 7, unit = "in", dpi = 300)
# inverse efficiency continuous age plot
in.e_continuous_age_plot <- ggplot(mars_subs, aes(x = age, y = inv_e)) +
geom_point() +
stat_smooth(aes(y = inv_e), method = "lm", formula = y ~ x, color = "black") +
ylab("Inverse Efficiency (ms)") +
xlab("Age")  +
coord_cartesian(ylim = c(0, 25000)) +
theme_bw()+
theme(legend.position = "none",
panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
in.e_continuous_age_plot
#save plot
ggsave(glue("{output_folder}/in.e_continuous_age_plot.png"), plot = last_plot(), height = 3, width = 4, unit = "in", dpi = 300)
########################
#### MaRs-IB ~ WASI ####
########################
# create dataset
wasi_data <- mars_subs %>%
rename(wasi_mr = WASI_raw_MR,
wasi_verbal = WASI_rawVerbal,
wasi_IQ = WASI_IQ) %>%
filter(wasi_mr > 0)
wasi_data$age_z <- scale_this(wasi_data$age)
wasi_data$mars_acc_z <- scale_this(wasi_data$acc)
# models
wasi.mars <- lm(wasi_mr ~ mars_acc_z * age_z, data = wasi_data)
summary(wasi.mars)
# manually save model outputs
tab_model(wasi.mars, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("MaRs-IB ~ WASI"),
pred.labels = c("Intercept",
"Mars Accuracy",
"Age",
"Mars Accuracy * Age"),
file = glue("{output_folder}/wasi.mars.html"))
wasi.mars.v <- lm(wasi_verbal ~ mars_acc_z * age_z, data = wasi_data)
wasi_data$age_z <- scale_this(wasi_data$age)
wasi_data$wasi_mr_z <- scale_this(wasi_data$wasi_mr)
# Examine relation between WASI MR and mars-accuracy
wasi.mars <- lm(mars_acc ~ wasi_mr_z * age_z, data = wasi_data)
# Examine relation between WASI MR and mars-accuracy
wasi.mars <- lm(accuracy ~ wasi_mr_z * age_z, data = wasi_data)
head(wasi_data)
# Examine relation between WASI MR and mars-accuracy
wasi.mars <- lm(acc ~ wasi_mr_z * age_z, data = wasi_data)
summary(wasi.mars)
# Examine relation between WASI MR and mars-accuracy
wasi.mars <- lm(acc ~ wasi_mr_z * age_z , data = wasi_data)
summary(wasi.mars)
# manually save model outputs
tab_model(wasi.mars, show.stat = F,
string.ci = "CI (95%)",
string.est = "Estimate",
dv.labels = c("MaRs-IB ~ WASI"),
pred.labels = c("Intercept",
"WASI MR",
"Age",
"WASI MR * Age"),
file = glue("{output_folder}/wasi.mars.html"))
#add age group to plot
wasi_data <- wasi_data %>%
mutate(age_group_2 = case_when(age < 13 ~ "Children",
age > 12.99 & age < 18 ~ "Adolescents",
age > 18 ~ "Adults"))
wasi_data$age_group_2 <- factor(wasi_data$age_group_2, levels = c("Children", "Adolescents", "Adults"))
# plot
wasi_plot <- ggplot(wasi_data, aes(x = acc, y = wasi_mr, color = age_group_2, group = age_group_2, fill = age_group_2)) +
geom_point() +
geom_smooth(method = "lm") +
scale_fill_brewer(palette = "Set2", name = "Age Group") +
scale_color_brewer(palette = "Set2", name = "Age Group") +
ylab("Raw WASI MR Score") +
xlab("MaRs-IB Accuracy") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
wasi_plot
# plot
wasi_plot <- ggplot(wasi_data, aes(y = acc, x = wasi_mr)) +
geom_point() +
geom_smooth(method = "lm") +
# scale_fill_brewer(palette = "Set2", name = "Age Group") +
#  scale_color_brewer(palette = "Set2", name = "Age Group") +
xlab("Raw WASI MR Score") +
ylab("MaRs-IB Accuracy") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
wasi_plot
# plot
wasi_plot <- ggplot(wasi_data, aes(y = acc, x = wasi_mr)) +
geom_point() +
geom_smooth(method = "lm", color = "black") +
# scale_fill_brewer(palette = "Set2", name = "Age Group") +
#  scale_color_brewer(palette = "Set2", name = "Age Group") +
xlab("Raw WASI MR Score") +
ylab("MaRs-IB Accuracy") +
theme_bw() +
theme(panel.grid.minor = element_blank(),
axis.title = element_text(face = "bold"))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))
wasi_plot
#save plot
ggsave(glue("{output_folder}/wasi_plot.png"), plot = last_plot(), height = 3, width = 5, unit = "in", dpi = 300)
#save plot
ggsave(glue("{output_folder}/wasi_plot.png"), plot = last_plot(), height = 3, width = 5, unit = "in", dpi = 300)
